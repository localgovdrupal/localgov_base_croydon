.form-control::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
  color: $dark;
  opacity: 1; /* Firefox */
}

.form-control:-ms-input-placeholder { /* Internet Explorer 10-11 */
  color: $dark;
}

.form-control::-ms-input-placeholder { /* Microsoft Edge */
  color: $dark;
}

.form-control {
  &:focus {
    outline: .1875rem solid $yellow;
    outline-offset: -.1875rem;
  }
}

.form-text,
.form-textarea {
  @extend .form-control;
}

.form-item input[type="file"] {
  background: none;
  border: 0 !important;
  padding: 0;
  width: auto;
  height: auto;

  &:hover,
  &:focus {
    color: $carbon;
    background: none;
    font-weight: normal;
  }
}

#file-upload-button {
  padding: 3rem;
}

.button {
  @extend .btn;

  @include rem(height, 50);
  @include rem(margin, 15, 15, 15, 0);

  border: 0 !important; // override base settings for things like action buttons
  padding: 0 .9375rem !important;
  font-family: $font-family-secondary;
  font-size: $font-size-ex-ex-lg;

  &.button--primary,
  &.button-action {
    @extend .btn-primary;
  }

  &.button-action {
    border-radius: 0;
    padding-top: 0.75rem !important;
  }

  &.webform-button--preview {
    @extend .btn-carbon;
  }
}

.webform-submission-form {
  fieldset,
  .fieldgroup {
    border: 0;
    padding: 0;
  }
}

.form-item {
  &-localgov-forms-date { // date specific styling

    .container-inline {
      @extend .row;

      .form-item {
        @extend .col-4;
      }
    }
  }

  .localgov-forms-date {
    input {
      @include rem(padding, 6);
    }
  }

  legend {
    font-size: 1.25rem;
    margin-bottom: 1.5rem;
    font-family: $font-family-secondary;
    font-weight: 700;
    line-height: 1.2;
    border: 0;
  }

  label {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    font-family: $font-family-secondary;
    font-weight: 700;
    line-height: 1.2;
  }

  .description {
    border: 0;
    padding: 0 0 1rem 0;
    background: none;
    font-size: $font-size-base;
    font-weight: $font-bold;

    .webform-element-description {
      display: block;
      width: 100%;
      font-size: $font-size-med;
      font-family: $font-family-base;
      font-weight: 400;
      color: $form-description-color;
    }
  }

  [id*='after--description'] {
    padding: 1rem 0;
  }

  input,
  textarea,
  select {
    font-size: $font-size-ex-med;
    display: block;
    width: 100%;
    padding: .375rem .75rem;
    font-weight: 400;
    line-height: 1.5;
    color: $form-description-color;
    background-color: $white;
    background-clip: padding-box;
    border: .06rem solid $input-border-color;
    border-radius: 0;
  }

  input,
  select {
    height: $input-height;
  }
}

.webform-type-radios {
  .description {
    display: block;
    width: 100%;
    font-size: $font-size-med;
    font-family: $font-family-base;
    font-weight: 400;
    color: $form-description-color;
  }
}

.conditional {
  width: 100%;
  padding-top: ($spacer * 1.5);
  padding-left: ($spacer * 1.5);
  border-left: 0.3125rem solid $primary;
}

// Form element wrapper
.page .form-control {
  margin-bottom: ($spacer * 1);
  font-size: $font-size-ex-med;
}

// Form legend
legend {
  font-family: $headings-font-family;
  font-weight: $font-bold; // for fallbacks only
  line-height: 1.2;
}

// Form label - only direct child of form group (avoids affecting radios and checkboxes)
.form-group > label {
  font-family: $headings-font-family;
  font-weight: $font-bold; // for fallbacks only
  line-height: 1.2;
  font-size: $font-size-ex-lg;
  margin-bottom: ($spacer * 1);
}

// Form label - extra description
label {
  span {
    display: block;
    width: 100%;
    font-size: $font-size-ex-med;
    font-family: $font-family-base;
    font-weight: $font-normal;
    color: $gray-dark;
  }
}

// Add margin bottom to checkbox labels
.form-check-label {
  margin-bottom: 0.5rem;
}

// Add margin right to radios
.radio {
  input {
    margin-right: $form-check-inline-margin-x;
  }

  &.disabled {
    label {
      color: $text-muted;
    }
  }
}

// Checkbox and radio text size
.js-webform-radios label,
.js-form-type-checkbox label,
.form-type-webform-terms-of-service label {
  font-family: $font-family-base;
  font-weight: 400;
  font-size: $font-size-med;
}

.facet-item input[type="checkbox"] + label::after,
.form-item-webform-terms-of-service input[type="checkbox"] + label::after,
.form-checkboxes input[type="checkbox"] + label::after,
.js-form-type-checkbox input[type="checkbox"] + label::after {
  color: $green;
}

.form-checkboxes input[type="checkbox"] + label::before,
.form-checkboxes input[type="checkbox"]:focus + label:before,
.facet-item input[type="checkbox"] + label::before,
.form-item-webform-terms-of-service input[type="checkbox"] + label::before,
.js-form-type-checkbox input[type="checkbox"] + label::before,
.js-form-type-checkbox input[type="checkbox"]:focus + label:before {
  border-color: $carbon;
}

// Form validation text
.valid-feedback,
.invalid-feedback {
  font-weight: $font-bold;
}

// Text field validation success icon
.was-validated .form-control:valid,
.form-control.is-valid {
  background: url(../../img/svg/check-success.svg);
  background-repeat: no-repeat;
  background-position: 98%;
  background-size: calc(2.875rem / 2) calc(2.875rem / 2);
}

// Text field validation warning icon
.was-validated .form-control:invalid,
.form-control.is-invalid {
  background: url(../../img/svg/warning-danger.svg);
  background-repeat: no-repeat;
  background-position: 98%;
  background-size: calc(2.875rem / 2) calc(2.875rem / 2);
}

// CHECKBOXES
.custom-input {
  display: flex;
  align-items: center;
  position: relative;
  cursor: pointer;
  font-size: $font-size-med !important;
  font-weight: normal !important;
  user-select: none;

  @include rem(padding-left, 50);
  @include rem(min-height, 40);

  input { // Hide the browser's default radio button
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  label {
    display: flex;
  }

  span {
    margin: 0 !important;
  }
}

// Create a custom checkbox

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  background-color: $white;
  border: 0.063rem solid $input-border-color;
  margin: 0 !important;

  @include rem(width, 40);
  @include rem(height, 40);
}

// On mouse-over, add a grey background color

.custom-input:hover input ~ .checkmark {
  background-color: $white;
  border: 0.188rem solid $focus !important;
}

// When the checkbox is checked, add a blue background

.custom-input input:checked ~ .checkmark {
  background-color: $white;
}

// Radio and checkbox focus

.custom-input input:focus + .checkmark,
.custom-input input:focus + .radiomark {
  outline: 0.188rem solid $yellow !important;
  z-index: 999;
}

// Create the checkmark/indicator (hidden when not checked)

.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

// Show the checkmark when checked

.custom-input input:checked ~ .checkmark:after {
  display: block;
}

// Style the checkmark/indicator

.custom-input .checkmark:after {
  border: 0.063rem solid $green;
  border-width: 0 0.313rem 0.313rem 0;
  transform: rotate(45deg);

  @include rem(left, 13);
  @include rem(top, 6);
  @include rem(width, 12);
  @include rem(height, 20);
}

//RADIOS

/* Create a custom radio button */

.radiomark {
  position: absolute;
  top: 0;
  left: 0;
  background-color: $white;
  border-radius: 50%;
  border: 0.063rem solid $input-border-color;
  margin: 0 !important;

  @include rem(width, 40);
  @include rem(height, 40);
}


/* On mouse-over, add a grey background color */

.custom-input:hover input ~ .radiomark {
  background-color: $white;
  border: 0.063rem solid $focus !important;
}

/* When the radio button is checked, add a white background */

.custom-input input:checked ~ .radiomark {
  background-color: $white;
}

/* Create the indicator (the dot/circle - hidden when not checked) */

.radiomark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */

.custom-input input:checked ~ .radiomark:after {
  display: block !important;
}

/* Style the indicator (dot/circle) */

.custom-input .radiomark:after,
.custom-input input:hover ~ .radiomark:after {
  border-radius: 50%;
  background: $black;

  @include rem(top, 12);
  @include rem(left, 12);
  @include rem(width, 14);
  @include rem(height, 14);
}


/* image picker */
ul.thumbnails.image_picker_selector li .thumbnail {
  &.selected,
  &.focused {
    background: $primary;
    border: 0;
    cursor: pointer;
  }
}

/* file upload */
.js-form-type-managed-file {
  > div {
    display: inline-block;
    width: 100%;
  }
}

/* text area */
.js-form-item-textarea {
  label {
    display: inline-block;
    width: 100%;
  }
}

/* address actions */
.address-actions {
  .address-searchbutton {
    width: auto;
    border: 0 !important;
    border-radius: 0;
    color: $carbon;
    background-color: $green;
    font-weight: $font-bold;
    text-decoration: none;

    @extend .btn;

    &:hover,
    &:focus {
      color: $white;
      background-color: $teal;
    }
  }

  .js-reset-address {
    border: 0 !important;
    border-radius: 0;

    @extend .btn;
    @extend .btn-secondary;

    &:hover,
    &:focus {
      background-color: $indigo;
    }
  }
}

.link-button {
  background: none;
  color: $carbon;
  text-decoration: underline;
  border: 0;
  padding: 1rem 0;
}

.js-form-wrapper summary {
  @include rem(margin, 20, 0);
}

/** Form  validation styling **/

/* Inline error messages. */
.form-item .error {
  border: 0.188rem solid $danger !important;
}

/* Inline error messages. */
fieldset.radios--wrapper.required.error,
fieldset.checkboxes--wrapper.required.error,
fieldset.checkboxes--wrapper.error,
fieldset.radios--wrapper.error,
.form-item--error {
  border-left: 0.3125rem solid $danger;

  @include rem(padding-left, 16);
}

/* Form item labels */
.form-item.form-item--error label,
fieldset.radios--wrapper.error input[type="radio"] + label.option,
fieldset.checkboxes--wrapper.error input[type="checkbox"] + label.option,
.description {
  color: $carbon;
}

// error messages

.form-item--error-message {
  color: $danger;
  font-weight: $font-bold;
  display: inline-block;
  width: 100%;

  @include rem(padding, 5, 0);
  @include rem(margin-bottom, 10);
}

fieldset.checkboxes--wrapper.required.error,
fieldset.radios--wrapper.required.error {
  legend {
    padding-top: 1.3rem;
  }
}

.address--wrapper .fieldset-wrapper { // remove inherited padding for address lookup
  padding: 0;
}

.form-managed-file { // prevent checkbox form labels wrapping when displaying uploaded files
  label.option {
    span {
      display: initial;
    }
  }
}

/* facet syling */
.form-checkboxes input[type="checkbox"] + label,
.facet-item input[type="checkbox"] + label,
.form-item-webform-terms-of-service input[type="checkbox"] + label {
  width: 90% !important;
}

div#facet-group {
  display: flex;
}

span.facet-item__value {
  display: inline-block;
  width: 90%;
}

span.facet-item__count {
  display: contents;
  // set empty rhs for forms layout
}

.path-webform .webform-submission-form {
  @include media-breakpoint-up(md) {
    flex: 0 0 66.66667%;
    max-width: 66.66667%;
  }
}

/* styling fixes from design review oct 2023 */

.path-webform {
  h1 {
    margin-bottom: 3.5rem;

    &.lgd-page-title-block__title {
      display: none;
    }
  }

  .js-form-type-textfield,
  .js-form-type-email,
  .js-form-type-textarea,
  .js-form-type-processed-text,
  .js-form-type-checkbox,
  .radios--wrapper {
    margin-bottom: 2.75rem;
  }

  .js-webform-type-radios .fieldset-wrapper {
    padding: 0;
  }

  legend {
    margin-bottom: 0.4rem;
  }

  // customise messages

  .messages {
    &--error {
      border: 0.313rem solid;
      border-radius: 0;
      background: none;
      color: $carbon;
      border-color: $danger;
      box-shadow: none;

      @include rem(padding, 20);

      .messages__list {
        > .messages__item {
          font-size: $h5-font-size;

          @include media-breakpoint-up(md) {
            font-size: $h4-font-size;
          }

          .item-list__comma-list {
            display: block;
            font-size: $font-size-ex-med;
          }

          ~ .messages__item {
            font-size: $font-size-ex-med;

            @include media-breakpoint-up(md) {
              font-size: $font-size-lg;
            }
          }
        }
      }

      > div {
        font-size: $h5-font-size;

        @include media-breakpoint-up(md) {
          font-size: $h4-font-size;
        }

        ul {
          display: block;
          font-size: $font-size-ex-med;
        }
      }
    }
  }
}

.localgov-webform-uk-address {
  &--wrapper {
    @include rem(margin-bottom, 44);

    .webform-element-description {
      font-size: $font-size-ex-ex-lg;
      padding-bottom: 1rem;
      margin-bottom: 3rem;
      border-bottom: 0.0625rem solid $gray-light;
    }

    .fieldset {
      &-wrapper {
        padding: 0;

        .centralhub-address-lookup,
        .js-address-entry-container {
          background-color: $gray-lookup;

          @include rem(padding, 10);

          .form-element-actions {
            .button {
              font-size: $font-size-ex-med;
            }
          }

          .link-button.manual-address {
            font-size: $font-size-lg;
            font-weight: 400;
            color: $purple;

            &:focus,
            &:hover {
              color: $carbon;
              text-decoration: none;
            }
          }
        }

        .form-item-address-lookup-address-lookup-address-search-address-searchstring {
          margin-bottom: 0;

          label {
            color: $gray-lookup-two;
          }

          .description {
            font-size: $font-size-med;
            font-weight: 400;
          }
        }
      }

      &-legend {
        @extend .h1;
      }
    }
  }
}

.webform-type-radios .form-item label,
.js-form-type-checkbox label {
  position: relative;
  padding: 0.625rem 0.9375rem 0.625rem 3.438rem !important;
}

.webform-type-radios .form-item,
.js-form-type-checkbox {
  padding-left: 0 !important;
}

/* Custom Date of Birth Styling */

.form-item-lgd-date-of-birth .container-inline,
.form-item-lgd-date-of-birth-desc-after .container-inline {
  display: flex;
  flex-wrap: wrap;
}

.form-item-lgd-date-of-birth .container-inline div[class*="-day"],
.form-item-lgd-date-of-birth-desc-after .container-inline div[class*="-day"] {
  margin-left: 0;
  flex: 1;
  margin-top: 0.5em;
  margin-right: 0.5em;
  margin-bottom: 0;

  @include media-breakpoint-up(md) {
    max-width: 6%;
  }

  input {
    @include rem(padding, 6);
  }
}

.form-item-lgd-date-of-birth .container-inline div[class*="-month"],
.form-item-lgd-date-of-birth-desc-after .container-inline div[class*="-month"] {
  flex: 2;
  margin: 0.5em;

  @include media-breakpoint-up(md) {
    max-width: 6%;
  }

  input {
    @include rem(padding, 6);
  }
}

.form-item-lgd-date-of-birth .container-inline div[class*="-year"],
.form-item-lgd-date-of-birth-desc-after .container-inline div[class*="-year"] {
  flex: 3;
  margin: 0.5em;

  @include media-breakpoint-up(md) {
    max-width: 9%;
  }

  input {
    @include rem(padding, 6);
  }
}
